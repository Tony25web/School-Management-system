model Exam {
    id           String       @id @default(uuid())
    name         String
    description  String
    subject      Subject      @relation(fields: [subjectId], references: [id])
    subjectId    String       @unique
    program      Program      @relation(fields: [programId], references: [id])
    programId    String
    passMark     Int          @default(50)
    totalMark    Int          @default(100)
    duration     String       @default("30")
    examDate     String
    examTime     String
    examType     String       @default("Quiz")
    examStatus   ExamStatus   @default(pending)
    questions    Question[]
    classLevel   ClassLevel   @relation(fields: [classLevelId], references: [id])
    classLevelId String       @unique
    AcademicYear AcadamicYear @relation(fields: [academicYear], references: [id])
    academicYear String       @unique
    AcademicTerm AcadamicTerm @relation(fields: [academicTerm], references: [id])
    academicTerm String       @unique
    createAt     DateTime     @default(now())
    updateAt     DateTime     @updatedAt
}

model Subject {
    id   String @id @default(uuid())
    exam Exam?
}

model Program {
    id   String @id @default(uuid())
    Exam Exam[]
}

model AcadamicTerm {
    id   String @id @default(uuid())
    Exam Exam?
}

enum ExamStatus {
    pending
    approved
    live
}

model Question {
    id     String  @id @default(uuid())
    Exam   Exam?   @relation(fields: [examId], references: [id])
    examId String?
}

model ClassLevel {
    id   String @id @default(uuid())
    Exam Exam?
}

model AcadamicYear {
    id   String @id @default(uuid())
    Exam Exam?
}
